version: "3.8"

services:
  survey-frontend:
    build: ../survey-fe # path to front-end Dockerfile
    image: survey-frontend
    container_name: survey-frontend
    ports:
      - "5173:80"
    depends_on:
      - survey-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 5s
      retries: 3

  survey-backend:
    build: .
    image: survey-backend
    container_name: survey-backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - FRONTEND_URL=${FRONTEND_URL}
      - OLLAMA_API_URL=${OLLAMA_API_URL}
      - AIML_API_KEY=${AIML_API_KEY}
      - ISSUER_BASE_URL=${ISSUER_BASE_URL}
      - AUDIENCE=${AUDIENCE}
      - AUTH0_M2M_CLIENT_ID=${AUTH0_M2M_CLIENT_ID}
      - AUTH0_M2M_CLIENT_SECRET=${AUTH0_M2M_CLIENT_SECRET}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - SLACK_MAIN_CHANNEL_ID=${SLACK_MAIN_CHANNEL_ID}
      - API_BASE_URL=${API_BASE_URL}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3
  postgres:
    image: postgres:15.5-alpine
    container_name: survey_postgres
    environment:
      POSTGRES_DB: survey_db
      POSTGRES_USER: survey_user
      POSTGRES_PASSWORD: survey_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U survey_user -d survey_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:latest
    container_name: survey_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - postgres
      - survey-backend
      - survey-frontend
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: survey_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin
volumes:
  postgres_data:
  pgadmin_data:
